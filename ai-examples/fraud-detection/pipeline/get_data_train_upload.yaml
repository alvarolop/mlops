# PIPELINE DEFINITION
# Name: get-data-train-upload
# Inputs:
#    card_transdata: str
#    s3_key: str
#    secret_name: str
#    train_model_component: str
components:
  comp-get-data:
    executorLabel: exec-get-data
    inputDefinitions:
      parameters:
        card_transdata:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        data_output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-train-fraud-detection-model:
    executorLabel: exec-train-fraud-detection-model
    inputDefinitions:
      artifacts:
        data_input_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
          isOptional: true
    outputDefinitions:
      artifacts:
        model_output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-upload-model:
    executorLabel: exec-upload-model
    inputDefinitions:
      artifacts:
        input_model_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        s3_key:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-get-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - get_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.1'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef get_data(data_output_path: OutputPath(), card_transdata: str):\n\
          \    import urllib.request\n    print(\"starting download...\")\n    url\
          \ = card_transdata\n    urllib.request.urlretrieve(url, data_output_path)\n\
          \    print(\"done\")\n\n"
        image: quay.io/modh/runtime-images:runtime-cuda-tensorflow-ubi9-python-3.11-20250213
    exec-train-fraud-detection-model:
      container:
        args:
        - /pipelines/component/src/train_model.py
        - --data_input_path
        - '{{$.inputs.artifacts[''data_input_path''].path}}'
        - --model_output_path
        - '{{$.outputs.artifacts[''model_output_path''].path}}'
        command:
        - python
        image: quay.io/dseveria/train-model:latest
    exec-upload-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - upload_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.1'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'boto3' 'botocore'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef upload_model(input_model_path: InputPath(), s3_key: str):\n \
          \   import os\n    import boto3\n    import botocore\n\n    aws_access_key_id\
          \ = os.environ.get('AWS_ACCESS_KEY_ID')\n    aws_secret_access_key = os.environ.get('AWS_SECRET_ACCESS_KEY')\n\
          \    endpoint_url = \"http://minio.minio.svc.cluster.local:9000\" #TODO\n\
          \    region_name = os.environ.get('AWS_DEFAULT_REGION')\n    bucket_name\
          \ = os.environ.get('AWS_S3_BUCKET')\n\n    print(f\"Uploading {input_model_path}\
          \ to {s3_key} in {bucket_name} bucket in {endpoint_url} endpoint\")\n\n\
          \    session = boto3.session.Session(aws_access_key_id=aws_access_key_id,\n\
          \                                    aws_secret_access_key=aws_secret_access_key)\n\
          \n    s3_resource = session.resource(\n        's3',\n        config=botocore.client.Config(signature_version='s3v4'),\n\
          \        endpoint_url=endpoint_url,\n        region_name=region_name)\n\n\
          \    bucket = s3_resource.Bucket(bucket_name)\n\n    print(f\"Uploading\
          \ {s3_key}\")\n    bucket.upload_file(input_model_path, s3_key)\n\n"
        image: quay.io/modh/runtime-images:runtime-cuda-tensorflow-ubi9-python-3.11-20250213
pipelineInfo:
  name: get-data-train-upload
root:
  dag:
    tasks:
      get-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-get-data
        inputs:
          parameters:
            card_transdata:
              componentInputParameter: card_transdata
        taskInfo:
          name: get-data
      train-fraud-detection-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-fraud-detection-model
        dependentTasks:
        - get-data
        inputs:
          artifacts:
            data_input_path:
              taskOutputArtifact:
                outputArtifactKey: data_output_path
                producerTask: get-data
        taskInfo:
          name: train-fraud-detection-model
      upload-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-upload-model
        dependentTasks:
        - train-fraud-detection-model
        inputs:
          artifacts:
            input_model_path:
              taskOutputArtifact:
                outputArtifactKey: model_output_path
                producerTask: train-fraud-detection-model
          parameters:
            s3_key:
              componentInputParameter: s3_key
        taskInfo:
          name: upload-model
  inputDefinitions:
    parameters:
      card_transdata:
        parameterType: STRING
      s3_key:
        parameterType: STRING
      secret_name:
        parameterType: STRING
      train_model_component:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.12.1
---
platforms:
  kubernetes:
    deploymentSpec:
      executors:
        exec-upload-model:
          secretAsEnv:
          - keyToEnv:
            - envVar: AWS_ACCESS_KEY_ID
              secretKey: AWS_ACCESS_KEY_ID
            - envVar: AWS_SECRET_ACCESS_KEY
              secretKey: AWS_SECRET_ACCESS_KEY
            - envVar: AWS_DEFAULT_REGION
              secretKey: AWS_DEFAULT_REGION
            - envVar: AWS_S3_BUCKET
              secretKey: AWS_S3_BUCKET
            - envVar: AWS_S3_ENDPOINT
              secretKey: AWS_S3_ENDPOINT
            secretName: dataconnection-one
