
{{- if .Values.pipeline.enabled }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-lister
  namespace: {{ $.Values.project.name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ $.Values.project.name }}
  name: pod-lister-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-lister-binding
  namespace: {{ $.Values.project.name }}
subjects:
- kind: ServiceAccount
  name: pod-lister
  namespace: {{ $.Values.project.name }}
roleRef:
  kind: Role
  name: pod-lister-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-pipelinerun-upload-{{ .Values.pipeline.name }}
  namespace: {{ $.Values.project.name }}
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  template:
    spec:
      serviceAccountName: pod-lister
      containers:
      - name: pipelinerun
        image: gcr.io/tekton-releases/dogfooding/tkn@sha256:d17fec04f655551464a47dd59553c9b44cf660cc72dbcdbd52c0b8e8668c0579
        imagePullPolicy: IfNotPresent        
        command: ["/bin/bash"]
        args:
        - -ec
        - |-
          # Define the namespace and label
          NAMESPACE="{{ $.Values.project.name }}"
          LABEL="initial=true"

          # Check if there is a pod with the specified label in the specified namespace
          if ! oc get pods -n "$NAMESPACE" -l "$LABEL" --no-headers | grep -q '^'; then
              tkn pipeline start pipeline-upload-{{ .Values.pipeline.name }} -l initial=true --workspace name=workspace-source,claimName=pipeline-upload-{{ .Values.pipeline.name }}-source-pvc -n $namespace --showlog --use-param-defaults
              sleep 10
              tkn pipeline start pipeline-run-{{ .Values.pipeline.name }} -l initial=true -n $namespace --showlog
          fi
      restartPolicy: Never
  backoffLimit: 1
{{- end }}

